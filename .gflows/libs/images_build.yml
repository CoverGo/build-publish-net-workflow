#@ load("@ytt:overlay", "overlay")
#@overlay/match by=overlay.subset({"name": "Build and publish"}), expects="0+"
#@ load("workflows.lib.yml", "image_build_job")
#@ load("@ytt:data", "data")
#@ load("workflows.lib.yml", "tag_cache")
#@ load("workflows.lib.yml", "tag_version")
#@ load("workflows.lib.yml", "checkout_private_actions")
#@ load("workflows.lib.yml", "docker_build_job_name")

---
jobs:
#@ if data.values.nuget.enabled :
  #@overlay/match missing_ok=True
  nuget-build: #@ image_build_job(data.values.nuget, data.values.cache_registry, provide_version_args=True)
  #@overlay/match missing_ok=True
  nuget-publish: #@ image_build_job(data.values.nuget, data.values.cache_registry, load_image=True, push_image=False, provide_version_args=True )
#@ end

#@ if data.values.service.enabled:
  #@overlay/match missing_ok=True
  docker-build-service: #@ image_build_job(data.values.service, data.values.cache_registry)
  #@overlay/match missing_ok=True
  docker-publish-github: #@ image_build_job(data.values.service, data.values.cache_registry, main_registry=data.values.main_registry, tag_build = "${{ needs.version.outputs.docker_image_ghcr_tags }}" )
  #@overlay/match missing_ok=True
  docker-publish-alicloud: #@ image_build_job(data.values.service, data.values.cache_registry, main_registry=data.values.main_registry, tag_build = "${{ needs.version.outputs.docker_image_ali_cloud_tags }}", add_if=False )
#@ end


 
 