---
#@ def generate_scan_code_net_job(section, sections):
  name: #@ section["name"]
  runs-on: #@ getattr(section,"runner","ubuntu-latest")
  timeout-minutes: 10
  steps:
#@    needs = ["version"]
#@
#@    if hasattr(sections,"integration_test"):
#@      needs.extend(dep.get_integration_tests_run_jobs(sections.integration_test))
#@    end
#@
#@    if hasattr(sections,"unit_test"):
#@      needs.extend(dep.get_unit_tests_job_names(sections.unit_test))
#@    end
        needs: #@ needs
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - name: Set up Java 17
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: adopt
      - name: Setup Dotnet
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: #@ getattr(section,"dotnet_version","6.x")
      - name: CoverGo Nuget
        run: dotnet nuget update source github --username ${{ secrets.PAT_USER_READ_PACKAGES }} --password ${{ secrets.PAT_READ_PACKAGES }} --store-password-in-clear-text
      - name: Download Coverage Artifacts
        uses: actions/download-artifact@v2
        with:
          path: ./
      - name: SonarCloud Scan
        run: |
          dotnet tool install --global dotnet-sonarscanner
          dotnet sonarscanner begin /k:"${{ github.repository_owner }}_${{ github.event.repository.name }}" /d:sonar.token="${{ secrets.SONAR_TOKEN }}" /d:sonar.host.url="https://sonarcloud.io" /o:covergo /d:sonar.cs.opencover.reportsPaths=**/coverage.opencover.xml
          dotnet build --configuration Release
          dotnet sonarscanner end /d:sonar.token="${{ secrets.SONAR_TOKEN }}"
#@ end
---